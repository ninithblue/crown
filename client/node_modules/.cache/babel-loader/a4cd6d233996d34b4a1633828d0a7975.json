{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBi7kWOCLDlVHEEmKWEYPuY4SPowlFGBqU\",\n  authDomain: \"fir-cba35.firebaseapp.com\",\n  databaseURL: \"https://fir-cba35.firebaseio.com\",\n  projectId: \"fir-cba35\",\n  storageBucket: \"fir-cba35.appspot.com\",\n  messagingSenderId: \"447126842730\",\n  appId: \"1:447126842730:web:a4f536e26674e2cb724913\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creaing user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/ninith/Desktop/market/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,2BAFD;AAGXC,EAAAA,WAAW,EAAE,kCAHF;AAIXC,EAAAA,SAAS,EAAE,WAJA;AAKXC,EAAAA,aAAa,EAAE,uBALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAa;AACX;AACD;;AACD,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMV,OAAO,CAACW,GAAR,CACJ;AACEJ,QAAAA,WADF;AAEEC,QAAAA,KAFF;AAGEC,QAAAA,SAHF;AAIE,WAAGV;AAJL,OADI,CAAN;AAQD,KATD,CASC,OAAMa,KAAN,EAAY;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CAxBM;AA0BPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AACA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AACP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBi7kWOCLDlVHEEmKWEYPuY4SPowlFGBqU\",\n    authDomain: \"fir-cba35.firebaseapp.com\",\n    databaseURL: \"https://fir-cba35.firebaseio.com\",\n    projectId: \"fir-cba35\",\n    storageBucket: \"fir-cba35.appspot.com\",\n    messagingSenderId: \"447126842730\",\n    appId: \"1:447126842730:web:a4f536e26674e2cb724913\"\n};\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth){\n      return;\n    }\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const snapShot = await userRef.get();\n    if(!snapShot.exists){\n      const {displayName, email} = userAuth;\n      const createdAt = new Date();\n\n      try{\n        await userRef.set(\n          {\n            displayName,\n            email,\n            createdAt,\n            ...additionalData\n          }\n        );\n      }catch(error){\n        console.log('error creaing user', error.message);\n      }\n    }\n    return userRef;\n  }\n\n  firebase.initializeApp(config);\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt:'select_account'})\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n  export default firebase;\n"]},"metadata":{},"sourceType":"module"}