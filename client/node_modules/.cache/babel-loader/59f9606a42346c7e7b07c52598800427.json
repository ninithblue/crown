{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nconst selectUser = state => state.user;\n\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/ninith/Desktop/market/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectUser","user","selectCartHidden","hidden","selectCartItems","cartItems","selectCartItemCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,MAAMC,UAAU,GAAGF,KAAK,IAAIA,KAAK,CAACG,IAAlC;;AAEA,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE3CE,IAAD,IAASA,IAAI,CAACI,MAF8B,CAAvC;AAMP,OAAO,MAAMC,eAAe,GAAGR,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAQA,IAAI,CAACM,SAF8B,CAAtC;AAKP,OAAO,MAAMC,mBAAmB,GAAGV,cAAc,CAC/C,CAACQ,eAAD,CAD+C,EAE/CC,SAAS,IACTA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAFjC,EAE2C,CAF3C,CAH+C,CAA1C;AASP,OAAO,MAAMC,eAAe,GAAGf,cAAc,CAC3C,CAACQ,eAAD,CAD2C,EAE3CC,SAAS,IACTA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAFrD,EAE4D,CAF5D,CAH2C,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectCart = state => state.cart;\n\nconst selectUser = state => state.user;\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart)=> cart.hidden\n)\n\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart)=>cart.cartItems\n);\n\nexport const selectCartItemCount = createSelector(\n  [selectCartItems],\n  cartItems =>\n  cartItems.reduce(\n    (accumulatedQuantity, cartItem)=>\n    accumulatedQuantity + cartItem.quantity, 0\n  )\n)\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems =>\n  cartItems.reduce(\n    (accumulatedQuantity, cartItem)=>\n    accumulatedQuantity + cartItem.quantity * cartItem.price, 0\n  )\n)\n"]},"metadata":{},"sourceType":"module"}